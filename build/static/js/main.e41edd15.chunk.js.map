{"version":3,"sources":["contexts/UserContext.js","components/User.js","index.js"],"names":["UserContext","createContext","User","_useContext","useContext","user","changeUser","_useState","useState","firstName","lastName","_useState2","Object","slicedToArray","person","setPerson","handleChange","e","objectSpread2","defineProperty","target","name","value","react_default","a","createElement","className","onSubmit","preventDefault","type","placeholder","onChange","useStateWithSessionStorage","key","_useState3","JSON","parse","sessionStorage","getItem","_useState4","setValue","useEffect","setItem","stringify","rootElement","document","getElementById","ReactDOM","render","_useStateWithSessionS","_useStateWithSessionS2","setUser","Provider","newUser","components_User"],"mappings":"8KAEaA,EAAcC,wBAAc,IC2C1BC,MA1Cf,WAAgB,IAAAC,EACeC,qBAAWJ,GAAhCK,EADMF,EACNE,KAAMC,EADAH,EACAG,WADAC,EAEcC,mBAAS,CACnCC,UAAW,GACXC,SAAU,KAJEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAEPO,EAFOH,EAAA,GAECI,EAFDJ,EAAA,GAORK,EAAe,SAAAC,GACnBF,EAAUH,OAAAM,EAAA,EAAAN,CAAA,GAAKE,EAANF,OAAAO,EAAA,EAAAP,CAAA,GAAeK,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAQnD,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZrB,EAAKK,SADR,KACoBL,EAAKI,WAEzBc,EAAAC,EAAAC,cAAA,QAAME,SAVW,SAAAV,GACnBA,EAAEW,iBACFtB,EAAWQ,KASPS,EAAAC,EAAAC,cAAA,SACEI,KAAK,OACLR,KAAK,YACLS,YAAY,cACZR,MAAOR,EAAOL,UACdsB,SAAUf,IAEZO,EAAAC,EAAAC,cAAA,SACEI,KAAK,OACLR,KAAK,WACLS,YAAY,aACZR,MAAOR,EAAOJ,SACdqB,SAAUf,IAEZO,EAAAC,EAAAC,cAAA,UAAQI,KAAK,UAAb,kBCtBFG,SAA6B,SAAAC,GAAO,IAAAC,EACd1B,mBACxB2B,KAAKC,MAAMC,eAAeC,QAAQL,KAAS,CAAExB,UAAW,OAAQC,SAAU,WAFpC6B,EAAA3B,OAAAC,EAAA,EAAAD,CAAAsB,EAAA,GACjCZ,EADiCiB,EAAA,GAC1BC,EAD0BD,EAAA,GAOxC,OAHAE,oBAAU,WACRJ,eAAeK,QAAQT,EAAKE,KAAKQ,UAAUrB,KAC1C,CAACA,EAAOW,IACJ,CAACX,EAAOkB,KAgCjB,IAAMI,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOzB,EAAAC,EAAAC,cA9BhB,WAAe,IAAAwB,EAMWjB,EAA2B,QANtCkB,EAAAtC,OAAAC,EAAA,EAAAD,CAAAqC,EAAA,GAMN5C,EANM6C,EAAA,GAMAC,EANAD,EAAA,GAoBb,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACzB,EAAYoD,SAAb,CAAsB9B,MAAO,CAAEjB,OAAMC,WAPtB,SAAA+C,GACjBF,EAAQE,MAOJ9B,EAAAC,EAAAC,cAAC6B,EAAD,SAOQ,MAASV","file":"static/js/main.e41edd15.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext({});\r\n","import React, { useState, useContext } from \"react\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\n\r\nfunction User() {\r\n  const { user, changeUser } = useContext(UserContext);\r\n  const [person, setPerson] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setPerson({ ...person, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    changeUser(person);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"profile\">\r\n        {user.lastName}, {user.firstName}\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          placeholder=\" First name\"\r\n          value={person.firstName}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          placeholder=\" Last name\"\r\n          value={person.lastName}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Change Name</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport User from \"./components/User\";\nimport \"./styles.css\";\n// Contexts\nimport { UserContext } from \"./contexts/UserContext\";\n\nconst useStateWithLocalStorage = key => {\n  const [value, setValue] = useState(\n    JSON.parse(localStorage.getItem(key)) || { firstName: \"Fred\", lastName: \"Rogers\" }\n  );\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n  return [value, setValue];\n};\n\nconst useStateWithSessionStorage = key => {\n  const [value, setValue] = useState(\n    JSON.parse(sessionStorage.getItem(key)) || { firstName: \"Fred\", lastName: \"Rogers\" }\n  );\n  useEffect(() => {\n    sessionStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n  return [value, setValue];\n};\n\nfunction App() {\n\n  // Three different ways to store the state. Pick one!\n\n  //const [user, setUser] = useState({}); // <-- will not persist data if user refreshes\n  //const [user, setUser] = useStateWithLocalStorage(\"user\");\n  const [user, setUser] = useStateWithSessionStorage(\"user\");\n\n  // Uncomment the useEffect if not using local storage or session storage\n  /*\n  useEffect(() => {\n    setUser({ firstName: \"Fred\", lastName: \"Rogers\" });\n  }, []);\n  */\n\n  const changeUser = newUser => {\n    setUser(newUser);\n  };\n\n  //console.log(UserContext);\n  return (\n    <div className=\"container\">\n      <UserContext.Provider value={{ user, changeUser }}>\n        <User />\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}